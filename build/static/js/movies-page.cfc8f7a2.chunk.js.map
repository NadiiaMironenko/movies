{"version":3,"sources":["Services/fetch.js","components/MoviesItems/MoviesItems.js","components/MoviesItems/MoviesItems.module.css","components/SearchForm.js","views/MoviesPage.js"],"names":["BASE_URL","key","FetchAll","axios","get","FetchByName","name","FetchMovieDetails","id","FetchDetailsCasts","then","res","data","FetchDetailsReviews","MoviesListItems","films","location","console","log","className","s","items","map","popular","popularity","poster_path","title","to","pathname","state","from","item","src","alt","module","exports","SearchForm","onSubmit","event","preventDefault","trim","props","swal","text","icon","handleInput","Event","setState","target","value","toLowerCase","this","type","onChange","Component","MoviesPage","status","onHandleSubmit","query","search","split","results","prevProps","prevState","history","push","match","url"],"mappings":"iGAAA,+LAEMA,EAAW,+BACXC,EAAM,mCAEZ,SAASC,IACP,OAAOC,IAAMC,IAAN,UAAaJ,EAAb,uCAAoDC,IAG7D,SAASI,EAAYC,GACnB,OAAOH,IAAMC,IAAN,UAAaJ,EAAb,iCAA8CC,EAA9C,kBAA2DK,IAGpE,SAASC,EAAkBC,GACzB,OAAOL,IAAMC,IAAN,UAAaJ,EAAb,kBAA+BQ,EAA/B,oBAA6CP,IAGtD,SAASQ,EAAkBD,GACzB,OAAOL,IACJC,IADI,UACGJ,EADH,kBACqBQ,EADrB,4BAC2CP,IAC/CS,MAAK,SAACC,GAAD,OAASA,EAAIC,QAGvB,SAASC,EAAoBL,GAC3B,OAAOL,IACJC,IADI,UACGJ,EADH,kBACqBQ,EADrB,4BAC2CP,IAC/CS,MAAK,SAACC,GAAD,OAASA,EAAIC,U,gCC1BvB,qEAGe,SAASE,EAAT,GAA+C,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAE/C,OADAC,QAAQC,IAAIF,GAEV,oBAAIG,UAAWC,IAAEC,MAAjB,SACGN,EAAMO,KAAI,SAACC,GAAa,IACff,EAAuCe,EAAvCf,GAAIgB,EAAmCD,EAAnCC,WAAYC,EAAuBF,EAAvBE,YAAaC,EAAUH,EAAVG,MACrC,OACE,6BACE,eAAC,IAAD,CAAMC,GAAI,CAAEC,SAAS,WAAD,OAAapB,GAAMqB,MAAO,CAAEC,KAAMd,IAAtD,UACE,qBACEG,UAAWC,IAAEW,KACbC,IAAG,6CAAwCP,GAC3CQ,IAAI,KAEN,6BAAKP,IACL,yCAAYF,SARPhB,U,mBCTnB0B,EAAOC,QAAU,CAAC,MAAQ,2BAA2B,KAAO,4B,kJCGvCC,E,4MACnBP,MAAQ,CACNvB,KAAM,I,EAGR+B,SAAW,SAACC,GACVA,EAAMC,iBACuB,KAAzB,EAAKV,MAAMvB,KAAKkC,KASpB,EAAKC,MAAMJ,SAAS,EAAKR,MAAMvB,MAR7BoC,IAAK,CACHhB,MAAO,QACPiB,KAAM,mBACNC,KAAM,W,EAQZC,YAAc,SAACC,GACb,EAAKC,SAAS,CAAEzC,KAAMwC,EAAME,OAAOC,MAAMC,iB,4CAG3C,WACE,OACE,mCACE,uBAAMb,SAAUc,KAAKd,SAArB,UACE,yDAEE,uBAAOe,KAAK,OAAOC,SAAUF,KAAKN,iBAEpC,wBAAQO,KAAK,SAAb,6B,GA/B8BE,a,gBCEnBC,E,4MACnB1B,MAAQ,CACNd,MAAO,GACPT,KAAM,GACNkD,OAAQ,Q,EAyBVC,eAAiB,SAACnD,GAChB,EAAKyC,SAAS,CAAEzC,U,uDAxBlB,WAAqB,IAAD,OACZoD,EAAQP,KAAKV,MAAMzB,SAAS2C,OAAOC,MAAM,KAAK,GAE/CF,GAILrD,YAAYqD,GAAOhD,MAAK,SAACC,GACvB,EAAKoC,SAAS,CAAEhC,MAAOJ,EAAIC,KAAKiD,QAASL,OAAQ,iB,gCAIrD,SAAmBM,EAAWC,GAAY,IAAD,OACnCA,EAAUzD,OAAS6C,KAAKtB,MAAMvB,MAChCD,YAAY8C,KAAKtB,MAAMvB,MAAMI,MAAK,SAACC,GACjC,EAAKoC,SAAS,CAAEhC,MAAOJ,EAAIC,KAAKiD,QAASL,OAAQ,YACjD,EAAKf,MAAMuB,QAAQC,KAAnB,UACK,EAAKxB,MAAMyB,MAAMC,IADtB,kBACmC,EAAKtC,MAAMvB,Y,oBAUpD,WAAU,IACAS,EAAUoC,KAAKtB,MAAfd,MAER,OACE,qCACE,cAAC,EAAD,CAAYsB,SAAUc,KAAKM,iBAC3B,cAAC,IAAD,CAAiBzC,SAAUmC,KAAKV,MAAMzB,SAAUD,MAAOA,W,GAvCvBuC","file":"static/js/movies-page.cfc8f7a2.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst BASE_URL = \"https://api.themoviedb.org/3\";\r\nconst key = \"3860fcb92da4251802f0dff28fa48025\";\r\n\r\nfunction FetchAll() {\r\n  return axios.get(`${BASE_URL}/trending/movie/day?api_key=${key}`);\r\n}\r\n\r\nfunction FetchByName(name) {\r\n  return axios.get(`${BASE_URL}/search/movie?api_key=${key}&query=${name}`);\r\n}\r\n\r\nfunction FetchMovieDetails(id) {\r\n  return axios.get(`${BASE_URL}/movie/${id}?api_key=${key}`);\r\n}\r\n\r\nfunction FetchDetailsCasts(id) {\r\n  return axios\r\n    .get(`${BASE_URL}/movie/${id}/credits?api_key=${key}`)\r\n    .then((res) => res.data);\r\n}\r\n\r\nfunction FetchDetailsReviews(id) {\r\n  return axios\r\n    .get(`${BASE_URL}/movie/${id}/reviews?api_key=${key}`)\r\n    .then((res) => res.data);\r\n}\r\n\r\nexport {\r\n  FetchAll,\r\n  FetchByName,\r\n  FetchMovieDetails,\r\n  FetchDetailsCasts,\r\n  FetchDetailsReviews,\r\n};\r\n","import { Link } from \"react-router-dom\";\r\nimport s from \"./MoviesItems.module.css\"\r\n\r\nexport default function MoviesListItems({ films, location }) {\r\n  console.log(location);\r\n  return (\r\n    <ul className={s.items}>\r\n      {films.map((popular) => {\r\n        const { id, popularity, poster_path, title } = popular;\r\n        return (\r\n          <li key={id}>\r\n            <Link to={{ pathname: `/movies/${id}`, state: { from: location } }}>\r\n              <img\r\n                className={s.item}\r\n                src={`https://image.tmdb.org/t/p/original${poster_path}`}\r\n                alt=\"\"\r\n              ></img>\r\n              <h2>{title}</h2>\r\n              <p>Rating: {popularity}</p>\r\n            </Link>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"items\":\"MoviesItems_items__1crDP\",\"item\":\"MoviesItems_item__2XKoL\"};","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport swal from \"sweetalert\";\r\n\r\nexport default class SearchForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n  };\r\n\r\n  onSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (this.state.name.trim === \"\") {\r\n      swal({\r\n        title: \"error\",\r\n        text: \"Write your query\",\r\n        icon: \"error\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.props.onSubmit(this.state.name);\r\n  };\r\n\r\n  handleInput = (Event) => {\r\n    this.setState({ name: Event.target.value.toLowerCase() });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <form onSubmit={this.onSubmit}>\r\n          <label>\r\n            Enter the films name\r\n            <input type=\"text\" onChange={this.handleInput} />\r\n          </label>\r\n          <button type=\"submit\">Search</button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nSearchForm.propTypes = {\r\n  value: PropTypes.string,\r\n};\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport SearchForm from \"../components/SearchForm\";\r\nimport { FetchByName } from \"../Services/fetch\";\r\nimport MoviesListItems from \"../components/MoviesItems/MoviesItems\";\r\n\r\nexport default class MoviesPage extends Component {\r\n  state = {\r\n    films: [],\r\n    name: \"\",\r\n    status: \"idle\",\r\n  };\r\n  componentDidMount() {\r\n    const query = this.props.location.search.split(\"=\")[1];\r\n\r\n    if (!query) {\r\n      return;\r\n    }\r\n\r\n    FetchByName(query).then((res) => {\r\n      this.setState({ films: res.data.results, status: \"resolve\" });\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.name !== this.state.name) {\r\n      FetchByName(this.state.name).then((res) => {\r\n        this.setState({ films: res.data.results, status: \"resolve\" });\r\n        this.props.history.push(\r\n          `${this.props.match.url}?query=${this.state.name}`\r\n        );\r\n      });\r\n    }\r\n  }\r\n\r\n  onHandleSubmit = (name) => {\r\n    this.setState({ name });\r\n  };\r\n\r\n  render() {\r\n    const { films } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <SearchForm onSubmit={this.onHandleSubmit} />\r\n        <MoviesListItems location={this.props.location} films={films} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nMoviesPage.propTypes = {\r\n  films: PropTypes.array,\r\n  name: PropTypes.string,\r\n  status: PropTypes.string,\r\n};\r\n"],"sourceRoot":""}